// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quake.Data.Database;

namespace Quake.Data.Migrations
{
    [DbContext(typeof(QuakeContext))]
    [Migration("20210204112248_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Quake.Data.Entities.Building", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lng")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CityId");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Strojarska 20",
                            CardId = 1L,
                            CityId = 1L,
                            Description = "Vrlo oštećena zgrada",
                            Lat = 45.803226000000002,
                            Lng = 15.989195
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Ulica grada Vukovara 238",
                            CardId = 2L,
                            CityId = 1L,
                            Description = "Vrlo oštećena zgrada",
                            Lat = 45.800562999999997,
                            Lng = 15.994923999999999
                        },
                        new
                        {
                            Id = 3L,
                            Address = "Sumetlicka 39",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.799618000000002,
                            Lng = 15.982284999999999
                        },
                        new
                        {
                            Id = 4L,
                            Address = "Ulica Kraljice Jelene 4",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.806241,
                            Lng = 15.989720999999999
                        },
                        new
                        {
                            Id = 5L,
                            Address = "Pavla Hatza 20",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.807783999999998,
                            Lng = 15.982132999999999
                        },
                        new
                        {
                            Id = 6L,
                            Address = "Ulica Baruna Trenka 2",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.807713999999997,
                            Lng = 15.976683
                        },
                        new
                        {
                            Id = 7L,
                            Address = "Gunduliceva 12",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.810806999999997,
                            Lng = 15.971931
                        },
                        new
                        {
                            Id = 8L,
                            Address = "Branjugova 6",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.814089000000003,
                            Lng = 15.981847
                        },
                        new
                        {
                            Id = 9L,
                            Address = "Marticeva 63",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.812210999999998,
                            Lng = 15.991466000000001
                        },
                        new
                        {
                            Id = 10L,
                            Address = "Tuskanova ulica 45",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.809514999999998,
                            Lng = 15.997946000000001
                        },
                        new
                        {
                            Id = 11L,
                            Address = "Ulica Izidora Krsnjavog 2",
                            CardId = 3L,
                            CityId = 1L,
                            Description = "Manje oštećena zgrada",
                            Lat = 45.807856000000001,
                            Lng = 15.967188
                        });
                });

            modelBuilder.Entity("Quake.Data.Entities.Card", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CardType = "Red"
                        },
                        new
                        {
                            Id = 2L,
                            CardType = "Yellow"
                        },
                        new
                        {
                            Id = 3L,
                            CardType = "Green"
                        });
                });

            modelBuilder.Entity("Quake.Data.Entities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityName = "Zagreb"
                        },
                        new
                        {
                            Id = 2L,
                            CityName = "Karlovac"
                        });
                });

            modelBuilder.Entity("Quake.Data.Entities.Building", b =>
                {
                    b.HasOne("Quake.Data.Entities.Card", "Card")
                        .WithMany("Buildings")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quake.Data.Entities.City", "City")
                        .WithMany("Buildings")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
